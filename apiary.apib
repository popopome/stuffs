HOST: http://api.cameraace.net/

--- CameraAce API ---

---
CameraAce API for supporting slideshow and group share.
---

--
Folder

The following is a section of resources related to the shared folder

    status
    --------------------------------------------------------------
    200         Success
    
API를 만들어주세요

--

Create a folder 
POST /v0/folder
> Content-Type: application/json
{ "name": "abcd",
  "desc": "abcd photo"
}
< 200
< Content-Type: application/json
{ "code": 0,
  "id": "sample-folder-id1"
}

Save new products in your shopping cart
POST /shopping-cart
> Content-Type: application/json
{ "product":"1AB23ORM", "quantity": 2 }
< 201
< Content-Type: application/json
{ "status": "created", "url": "/shopping-cart/2" }

ERROR CASE
POST /shopping-cart
> Content-Type: application/xml
< 200
< Content-Type: application/json
{"code": 1}

FOLDER UPDATE
GET /v0/folders/{folderId}
> Content-Type: application/json
< 200
< Content-Type: application/json
{}

FOLDER meeeep
POST /v0/folders/{folderId}
> Content-Type: application/json
< 200
< Content-Type: application/json
{}

--
Photo
--

<h1>photo_create</h1>

Create a photo, upload photo & thumbnail binary data.

Input =>

- mtype : mime-type
- psize : photo-byte-array-size
- tsize : thumbnail-byte-array-size
- pw : photo width
- ph : photo height
- tw : thumb width
- th : thumb height

Side Effects => 

- Create and associate a new PHOTO_RAW entry
- Add Photo to Folder’s photo_list
- Add this action to the Folder Log

POST /v0/folders/{folderId}/photos
> "sid": "ABCDEFG"
> Content-Type: application/json 
{ "mtype": "image/jpeg", 
   "psize" : 123456, 
   "tsize" : 12345, 
   "pw" : 1280, 
   "ph" : 960,  
   "tw" : 400,  
   "th" : 400  }
< 200
< Content-Type: application/json
{ "code":0, "description": "OK", "photoId": "ABCDEFG" }


<h1>photo_delete</h1>

Delete photo from folder.

Side Effects => 

- Remove the associated PHOTO_RAW entry
- Remove Photo from Folder’s photo_list
- Add this action to the Folder Log

DELETE /v0/folders/{folderId}/photos/{photoId}
> "sid": "ABCDEFG"
< 200
< Content-Type: application/json
{ "code":0, "description": "OK" }


<h1>photo_url</h1>

Get public url to download photo.

GET /v0/folders/{folderId}/photos/{photoId}{?sid=ABCDEFG}
< 200
< Content-Type: application/json
{ "code":0, 
    "photoUrl": "http://some-url-to-download-photo", 
    "thumbUrl" : "http://some-url-to-download-thumbnail" } 
    
--
User
--

<h1>user_get_folder_list</h1>

Get list of folders :

- folders that are owned by user
- folders that are shared to user

GET /v0/users/folders{?sid=ABCDEFG}
< 200
< Content-Type: application/json
{ "code":0, 
    "user_folders": ["id1", "id2", "id3"], 
    "shared_folders": ["id1", "id2", "id3"] }

<h1>user_event</h1>

Get list of user events.

Events are sorted by timestamp in descending order (most recent event is in front of list).

<u>Event Type</u>

0 = Folder Invitation 

- sent to users who have been invited to join a folder. 
- event data => { fid : <folderId>, owner : <owner name> }
- client action => send user_event_resolved : "accept" or "reject"

1 = Folder Destroy

- sent to all shared members when owner leaves a folder
- event data => { pid : [id1, id2, id3 ...  ], name : <folder name> }
- client action => 
  a) If there are photos in pid, create a new local folder containing all photos in pid
  b) send user_event_resolved : "OK"

GET /v0/users/events{?sid=ABCDEFG}
< 200
< Content-Type: application/json
{ "code":0, "events": [
     { "id": "ABCDEFG", "type": 0, "data": {fid: "--folder id--", owner: "--owner id--"}, 
        "timestamp":1379469940381 },
     { "id": "HIJKLMN", "type": 1, "data": {pid: ["photoid1", "photoid2"], name: "folder name"},
        "timestamp":1379469908710 }
  ]}

<h1>user_event_resolved</h1>

Resolve an user event.

POST /v0/users/events/{eventId}
> "sid": "ABCDEFG"
> Content-Type: application/json
{ "d": "accept" }
< 200
< Content-Type: application/json
{ code:0, description: "OK" } 

--
Slideshow
--

<h1>slideshow_get_url</h1>

Get a new public link for playing a slideshow.

GET /v0/folders/{folderId}/slideshows{?sid=ABCDEF}
< 200
< Content-Type: application/json
{ "code":0, "url": "http://some-url-to-play-slideshow" } 
